---

version: "3.8"

services:
  drone:
    image: "drone/drone:{{ drone_drone_image_tag }}"
    environment:
      DRONE_SERVER_HOST: "{{ drone_server_proxy_host }}"
      DRONE_SERVER_PROTO: "https"
      DRONE_SERVER_PROXY_HOST: "{{ drone_server_proxy_host }}"
      DRONE_SERVER_PROXY_PROTO: "https"
      DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"
      DRONE_COOKIE_SECRET: "{{ drone_cookie_secret }}"
      DRONE_COOKIE_TIMEOUT: "720h"
      DRONE_GITEA_SERVER: "{{ drone_gitea_server }}"
      DRONE_GITEA_CLIENT_ID: "{{ drone_gitea_client_id }}"
      DRONE_GITEA_CLIENT_SECRET: "{{ drone_gitea_client_secret }}"
      DRONE_GIT_ALWAYS_AUTH: "true"
      DRONE_LOGS_DEBUG: "false"
      DRONE_CRON_DISABLED: "false"
      DRONE_USER_CREATE: "{{ drone_user_create }}"
      DRONE_DATABASE_SECRET: "{{ drone_database_secret }}"
      DRONE_DATABASE_DRIVER: "postgres"
      DRONE_DATABASE_DATASOURCE: "postgres://{{ drone_postgres_user }}:{{ drone_postgres_password }}@db:5432/{{ drone_postgres_db }}?sslmode=disable"
      DRONE_REDIS_CONNECTION: "redis://redis-server:6379"
    depends_on:
      - "db"
      - "redis-server"
    ports:
      - "{{ drone_published_port }}:80/tcp"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - "drone-internal"
    restart: unless-stopped

  runner:
    image: "drone/drone-runner-docker:{{ drone_runner_image_tag }}"
    environment:
      DRONE_RPC_HOST: "{{ drone_server_proxy_host }}"
      DRONE_RPC_PROTO: "https"
      DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"
      DRONE_TMATE_ENABLED: "true"
      DRONE_RUNNER_CAPACITY: "{{ drone_runner_capacity }}"
      DRONE_RUNNER_NAME: "{{ drone_runner_name }}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - "drone"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - "drone-internal"
    restart: unless-stopped

  redis-server:
    image: "redis:{{ drone_redis_image_tag }}"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - "drone-internal"
    restart: unless-stopped

  db:
    image: "postgres:{{ drone_postgres_image_tag }}"
    environment:
      POSTGRES_USER: "{{ drone_postgres_user }}"
      POSTGRES_PASSWORD: "{{ drone_postgres_password }}"
      POSTGRES_DB: "{{ drone_postgres_db }}"
      PGDATA: "/opt/pgdata"
    volumes:
      - "drone-pgdata:/opt/pgdata"
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ drone_postgres_user }}"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - "drone-internal"
    restart: unless-stopped

networks:
  drone-internal:
    driver: bridge
    name: drone-internal
    external: false

volumes:
  drone-pgdata:
    driver: local
    external: false
    name: drone-pgdata
